service: sp-aws-direct-to-s3
frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs4.3
  region: ap-southeast-1
  stage: dev
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "*"
      Resource: "*"

functions:
  requestUploadUrl:
    handler: handler.requestUploadUrl
    events:
      - http:
          path: requestUploadUrl
          method: post
          cors: true

  afterSend:
    handler: handler.afterSend

resources:
  Resources:
    S3BucketAfterSend:
      Type: AWS::S3::Bucket
      DependsOn:
        - AfterSendLambdaPermissionS3BucketS3
      Properties:
        BucketName: { 'Fn::Join' : ['-', ['smartspark', { 'Ref' : 'AWS::AccountId' } ] ]  }
        NotificationConfiguration:
          LambdaConfigurations:
            - Event: 's3:ObjectCreated:*'
              Function:
                'Fn::GetAtt': [ AfterSendLambdaFunction, Arn ]
    AfterSendLambdaPermissionS3BucketS3:
      DependsOn:
        - AfterSendLambdaFunction
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          'Fn::GetAtt': [ AfterSendLambdaFunction, Arn ]
        Action: 'lambda:InvokeFunction'
        Principal: 's3.amazonaws.com'
        SourceArn: { 'Fn::Join' : ['-', [ 'arn:aws:s3:::smartspark', { 'Ref' : 'AWS::AccountId' } ] ]  }

custom:
  optimize:
    minify: true
    presets: ["env"]

plugins:
  - serverless-plugin-optimize
